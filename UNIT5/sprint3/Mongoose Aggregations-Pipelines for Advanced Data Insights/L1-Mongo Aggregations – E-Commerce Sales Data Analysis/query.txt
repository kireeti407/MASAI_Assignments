
// 1. Insert the provided dataset into the "orders" collection.
db.orders.insertMany([
  {
    "username": "alice",
    "productName": "iPhone 14",
    "category": "Electronics",
    "quantity": 2,
    "totalPrice": 2000,
    "orderDate": "2024-11-12T10:30:00Z",
    "status": "Delivered"
  },
  {
    "username": "bob",
    "productName": "T-shirt",
    "category": "Clothing",
    "quantity": 5,
    "totalPrice": 100,
    "orderDate": "2024-11-15T13:45:00Z",
    "status": "Delivered"
  },
  {
    "username": "charlie",
    "productName": "iPhone 14",
    "category": "Electronics",
    "quantity": 1,
    "totalPrice": 1000,
    "orderDate": "2024-12-01T09:00:00Z",
    "status": "Cancelled"
  },
  {
    "username": "daisy",
    "productName": "T-shirt",
    "category": "Clothing",
    "quantity": 2,
    "totalPrice": 40,
    "orderDate": "2024-12-10T14:00:00Z",
    "status": "Pending"
  },
  {
    "username": "edward",
    "productName": "Coffee Maker",
    "category": "Home Appliances",
    "quantity": 1,
    "totalPrice": 150,
    "orderDate": "2025-01-05T16:30:00Z",
    "status": "Shipped"
  },
  {
    "username": "fatima",
    "productName": "Blender",
    "category": "Home Appliances",
    "quantity": 1,
    "totalPrice": 120,
    "orderDate": "2025-01-15T12:10:00Z",
    "status": "Delivered"
  },
  {
    "username": "george",
    "productName": "iPhone 14",
    "category": "Electronics",
    "quantity": 1,
    "totalPrice": 1000,
    "orderDate": "2025-02-01T10:00:00Z",
    "status": "Delivered"
  },
  {
    "username": "harry",
    "productName": "Shoes",
    "category": "Clothing",
    "quantity": 3,
    "totalPrice": 210,
    "orderDate": "2025-02-10T17:20:00Z",
    "status": "Delivered"
  },
  {
    "username": "isla",
    "productName": "T-shirt",
    "category": "Clothing",
    "quantity": 4,
    "totalPrice": 80,
    "orderDate": "2025-03-01T09:30:00Z",
    "status": "Shipped"
  },
  {
    "username": "jake",
    "productName": "AirPods",
    "category": "Electronics",
    "quantity": 2,
    "totalPrice": 300,
    "orderDate": "2025-03-12T14:45:00Z",
    "status": "Delivered"
  },
  {
    "username": "keira",
    "productName": "Microwave",
    "category": "Home Appliances",
    "quantity": 1,
    "totalPrice": 220,
    "orderDate": "2025-03-25T11:00:00Z",
    "status": "Delivered"
  },
  {
    "username": "liam",
    "productName": "AirPods",
    "category": "Electronics",
    "quantity": 1,
    "totalPrice": 150,
    "orderDate": "2025-04-01T08:15:00Z",
    "status": "Cancelled"
  },
  {
    "username": "mona",
    "productName": "Shoes",
    "category": "Clothing",
    "quantity": 2,
    "totalPrice": 140,
    "orderDate": "2025-04-10T15:25:00Z",
    "status": "Delivered"
  },
  {
    "username": "nathan",
    "productName": "iPhone 14",
    "category": "Electronics",
    "quantity": 1,
    "totalPrice": 1000,
    "orderDate": "2025-04-20T18:10:00Z",
    "status": "Delivered"
  },
  {
    "username": "olivia",
    "productName": "T-shirt",
    "category": "Clothing",
    "quantity": 3,
    "totalPrice": 60,
    "orderDate": "2025-04-28T20:45:00Z",
    "status": "Delivered"
  }
]);

// 2. Top 3 best-selling products by quantity sold.
db.orders.aggregate([
  {
    $group: {
      _id: "$productName",
      totalQuantity: { $sum: "$quantity" }
    }
  },
  { $sort: { totalQuantity: -1 } },
  { $limit: 3 }
]);

// 3. Total revenue for each product category.
db.orders.aggregate([
  {
    $group: {
      _id: "$category",
      totalRevenue: { $sum: "$totalPrice" }
    }
  }
]);

// 4. Average total price of all orders.
db.orders.aggregate([
  {
    $group: {
      _id: null,
      avgTotalPrice: { $avg: "$totalPrice" }
    }
  }
]);

// 5. Number of orders placed each month.
db.orders.aggregate([
  {
    $addFields: {
      month: { $substr: ["$orderDate", 0, 7] }
    }
  },
  {
    $group: {
      _id: "$month",
      orderCount: { $sum: 1 }
    }
  },
  { $sort: { _id: 1 } }
]);

// 6. Percentage of canceled orders.
db.orders.aggregate([
  {
    $group: {
      _id: null,
      totalOrders: { $sum: 1 },
      cancelledOrders: {
        $sum: {
          $cond: [{ $eq: ["$status", "Cancelled"] }, 1, 0]
        }
      }
    }
  },
  {
    $project: {
      _id: 0,
      percentageCancelled: {
        $multiply: [
          { $divide: ["$cancelledOrders", "$totalOrders"] },
          100
        ]
      }
    }
  }
]);

// 7. Top product category by revenue.
db.orders.aggregate([
  {
    $group: {
      _id: "$category",
      totalRevenue: { $sum: "$totalPrice" }
    }
  },
  { $sort: { totalRevenue: -1 } },
  { $limit: 1 }
]);

// 8. Most frequently ordered product.
db.orders.aggregate([
  {
    $group: {
      _id: "$productName",
      orderCount: { $sum: 1 }
    }
  },
  { $sort: { orderCount: -1 } },
  { $limit: 1 }
]);

// 9. Monthly revenue trend.
db.orders.aggregate([
  {
    $addFields: {
      month: { $substr: ["$orderDate", 0, 7] }
    }
  },
  {
    $group: {
      _id: "$month",
      monthlyRevenue: { $sum: "$totalPrice" }
    }
  },
  { $sort: { _id: 1 } }
]);

// 10. Count of orders by status.
db.orders.aggregate([
  {
    $group: {
      _id: "$status",
      count: { $sum: 1 }
    }
  }
]);

// 11. Total number of orders and quantity sold.
db.orders.aggregate([
  {
    $group: {
      _id: null,
      totalOrders: { $sum: 1 },
      totalQuantitySold: { $sum: "$quantity" }
    }
  }
]);

